#!/bin/bash

# build script for descent

# as soon as possible, convert to grunt

pwd

TASK="$1"

BUILD_DIR="dst"

if [ "$TASK" == "" ] ; then
  TASK="all"
fi

if [ "$TASK" == "clean" ] ; then
  CLEAN=1
  BUILD=0
  TEST=0
elif [ "$TASK" == "build" ] ; then
  CLEAN=1
  BUILD=1
  TEST=0
elif [ "$TASK" == "test" ] ; then
  CLEAN=0
  BUILD=0
  TEST=1
elif [ "$TASK" == "all" ] ; then
  CLEAN=1
  BUILD=1
  TEST=1
fi

if [ "$CLEAN" == 1 ] ; then
  echo "deleting build dir"
  echo "> rf -rf $BUILD_DIR/"
  rm -rf $BUILD_DIR/

  echo "deleting test build dir"
  echo "> rf -rf test/$BUILD_DIR/"
  rm -rf test/$BUILD_DIR/
fi

if [ "$BUILD" == 1 ] ; then
  echo "creating build dir"
  echo "> mkdir $BUILD_DIR"
  mkdir $BUILD_DIR

  echo "building coffeescripts"
  echo "> coffee -c -o $BUILD_DIR/ coffee/"
  coffee -c -o $BUILD_DIR/ coffee/

  echo "building parser"
  echo "> jison -o $BUILD_DIR/parser.js jison/descent.js"
  jison -o $BUILD_DIR/parser.js jison/descent.jison

  echo "patching parser"
  echo "> patch $BUILD_DIR/parser.js < patches/loadLexer.patch"
  patch $BUILD_DIR/parser.js < patches/loadLexer.patch
  echo "> patch $BUILD_DIR/parser.js < patches/cliCompile.patch"
  patch $BUILD_DIR/parser.js < patches/cliCompile.patch
fi

if [ "$TEST" == 1 ] ; then
  echo "building tests"
  echo "> coffee -c -o test/$BUILD_DIR/ test/coffee/"
  coffee -c -o test/$BUILD_DIR/ test/coffee/

  echo "running lexer tests"
  echo "> node test/$BUILD_DIR/lexer_test.js"
  node test/$BUILD_DIR/lexer_test.js
  echo "running parser tests"
  echo "> node test/$BUILD_DIR/parser_test.js"
  node test/$BUILD_DIR/parser_test.js
fi
